{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Test Card Schema",
    "description": "The Schmea for the zone plate section of the test card generator",
    "type": "object",
    "properties": {
        "grid": {
            "$ref": "#/$defs/gridschema"
        },
        "colorSpace" : {
			"type" : "object"
		},
        "type": {
            "type": "string",
            "enum": ["builtin.zoneplate"],
            "description": "This to be labelled as \"builtin.zoneplate\", so that the json is correctly configured"
        },
        "plateType": {
            "enum": [
                "circular",
                "sweep",
                "ellipse"
            ],
            "description": "The type of zoneplate to be generated."
        },
        "startColor": {
            "enum": [
                "white",
                "black",
                "grey",
                "gray"
            ],
            "description": "The available colours for the middle of the zone plate."
        },
        "angle": {
            "anyOf": [
                {
                    "$ref": "#/$defs/radian1"
                },
                {
                    "$ref": "#/$defs/radian2"
                },
                {
                    "$ref": "#/$defs/degree"
                }
            ]
        },
        "mask": {
            "enum": [
                "circle",
                "square"
            ],
            "description": "The type of mask that can be applied to the zoneplate"
        },
        "zoneSize": {
            "type": "object",
            "properties": {
                "w": {
                    "$ref": "#/$defs/dimensions"
                },
                "h": {
                    "$ref": "#/$defs/dimensions"
                }
            },
            "required": [
                "w",
                "h"
            ],
            "additionalProperties": false,
            "description": "The width and height of the zone plate in pixels"
        },
        "position": {
            "type": "object",
            "properties": {
                "x": {
                    "$ref": "#/$defs/locations"
                },
                "y": {
                    "$ref": "#/$defs/locations"
                }
            },
            "description": "The x y location of zoneplate in pixels, where 0,0 is in the top left point of the image",
            "additionalProperties": false
        }
    },
    "required": [
        "plateType",
        "startColor",
        "angle",
        "type",
		"grid"
    ],
    "additionalProperties": false,
    "$defs": {
        "dimensions": {
            "type": "integer",
            "minimum": 24,
            "maximum": 65535
        },
        "locations": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
        },
        "radian1": {
            "type": "string",
            "desciption": "pattern requires a pi then star with a number, which can be divided by a resulting number",
            "pattern": "^π\\*(\\d){1,4}$",
            "description": "## Example\nThis is a multiplication of π up to 4 digits\n### Acceptable input\n- π*2\n- π*3332\n### Unacceptable input\n- π*0.5\n- π*12345"
        },
        "radian2": {
            "type": "string",
            "desciption": "pattern requires a pi then star with a number, which can be divided by a resulting number",
            "pattern": "^π\\*(\\d){1,4}/{1}(\\d){1,4}$",
            "description": "## Example\nThis is a multiplication of π up to 4 digits/4 digits \n### Acceptable input\n- π*1/22\n- π*7/3332\n### Unacceptable input\n- π*12345/3\n- π*0.5/3"
        },
        "degree": {
            "type": "number",
            "minimum": 0,
            "maximum": 360,
            "description": "## Degrees can be any number between 0 and 360"
        },
        "gridschema": {
            "properties": {
                "location": {
                    "anyOf":[
						{
								"type": "string",
								"pattern": "^[a-pA-P]{1}[0-8]{1}$"
							
						},
						{
		
								"type": "string",
								"pattern": "^[\\w\\W]{1,30}$"
							
						}
					],
                    "description": "The location of the module to be added to the test card"
                },
                "alias": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 30,
                    "description": "The name to refer to the chosen grid location for the module, these are reset for each section in the array and are optional"
                }
            },
            "required": [
                "location"
            ],
            "additionalProperties": false
        }
    }
}